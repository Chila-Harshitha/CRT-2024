Given a string S(input consisting) of ‘’ and ‘#’. The length of the string is variable. The task is to find the minimum number of ‘’ or ‘#’ to make it a valid string. The string is considered valid if the number of ‘’ and ‘#’ are equal. The ‘’ and ‘#’ can be at any position in the string.

Input Format

Read a string

Constraints

string

Output Format

(>#): positive integer (#>): negative integer (#=*): 0

Sample Input 0

###***
Sample Output 0

0
Sample Input 1

**###*##*###
Sample Output 1

-4
============================================================================================================
#include <stdio.h>

int main() {

    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
    char str[40];
    int c1=0,c2=0;
    scanf("%[^\n]s",str);
    for(int i=0;str[i]!='\0';i++){
        if(str[i]=='#')
            c1++;
        else if(str[i]=='*')
            c2++;
    }
    int k=(c1*(-1))+(c2*1);
    printf("%d",k);
    return 0;
}
